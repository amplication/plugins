# Default values for lusha-email-consent-api
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
owner: "plugin"

replicaCount: 1

image:
  repository: hub.lusha.co/lusha/
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

env:
  NODE_APP_INSTANCE: "kubernetes"
  ENABLE_DD: "true"

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "6060"
  prometheus.io/path: "/metrics"

serviceAnnotations:
  service.beta.kubernetes.io/aws-load-balancer-internal: "true"

podSecurityContext: {}
# fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

externalService:
  enabled: true
  type: LoadBalancer
  port: 80

ingress:
  enabled: false
  annotations:
    {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: ${{values.name + ".local" }}
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 400m
    memory: 1024Mi
  requests:
    cpu: 200m
    memory: 512Mi

Container:
  port: 3030

livenessProbe:
  port: 3030
  path: "/health"
  initialDelaySeconds: 5
readinessProbe:
  port: 3030
  path: "/health"
  initialDelaySeconds: 15

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 15
  targetCPUUtilizationPercentage: 70
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
